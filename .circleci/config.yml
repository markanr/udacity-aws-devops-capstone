# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  kubernetes: circleci/kubernetes@0.11.2
  aws-eks: circleci/aws-eks@1.0.3

jobs:
    lint-app:
        docker:
            - image: python:3.7.3-stretch
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ checksum "requirements.txt" }}
                - v1-dependencies-
            - run:
                name: install dependencies
                command: |
                    make setup
                    source venv/bin/activate
                    make install
                    # Install hadolint
                    wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                    chmod +x /bin/hadolint
            - run:
                name: run lint
                command: |
                    . venv/bin/activate
                    make lint 
            - save_cache:
                paths:
                    - ./venv
                key: v1-dependencies-{{ checksum "requirements.txt" }}
                
    build-push-container:
        machine: true
        working_directory: ~/repo
        steps:
            - checkout
            - run:
                name: Build image
                command: |
                    docker build --tag=capstone-project .
                    docker image ls
            - run:
                name: Push image to docker
                command: |
                    dockerpath="${DOCKER_LOGIN}/capstone-project"
                    echo "Docker username ${DOCKER_LOGIN}"
                    docker login --username ${DOCKER_LOGIN} --password ${DOCKER_PASSWORD}
                    echo "Docker path $dockerpath"
                    docker image tag capstone-project $dockerpath
                    docker image push $dockerpath
    
    create-deployment:
        docker:
            - image: python:3.7.3-stretch
        parameters:
            cluster-name:
                description: |
                    Cluster name
                type: string
        steps:
          - checkout
          - kubernetes/install
          - aws-eks/update-kubeconfig-with-authenticator:
              cluster-name: << parameters.cluster-name >>
              install-kubectl: true
          - kubernetes/create-or-update-resource:
              get-rollout-status: true
              resource-file-path: deployment.yml
              resource-name: deployment/capstone-project
              
    test-cluster:
        docker:
            - image: python:3.7.3-stretch
        parameters:
            cluster-name:
                description: |
                    Cluster name
                type: string
        steps:
            - kubernetes/install
            - aws-eks/update-kubeconfig-with-authenticator:
                cluster-name: << parameters.cluster-name >>
            - run:
                name: Test cluster
                command: |
                    kubectl get svc
                    kubectl get nodes
                    kubectl get deployment
              
workflows:
    default:
        jobs:
        - lint-app
        - build-push-container:
            requires:
                - "lint-app"
        - aws-eks/create-cluster:
            cluster-name: capstone-project
            requires:
                -   "build-push-container"
        - create-deployment:
            cluster-name: capstone-project
            requires: 
                - "aws-eks/create-cluster"
        - aws-eks/update-container-image:
            cluster-name: capstone-project
            container-image-updates: capstone-project=${DOCKER_LOGIN}/capstone-project
            post-steps:
                - kubernetes/delete-resource:
                    resource-names: capstone-project
                    resource-types: deployment
                    wait: true
            record: true
            requires:
                - "create-deployment"
            resource-name: deployment/capstone-project
        - test-cluster:
            cluster-name:  capstone-project
            requires:
                - "aws-eks/update-container-image"
        # - aws-eks/delete-cluster:
        #     cluster-name:  capstone-project
        #     requires:
        #         - "test-cluster"